const express = require('express');
const path = require('path');
const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(express.json());
app.use(express.static(path.join(__dirname, '../frontend')));

// ะขะตััะพะฒัะต ะดะฐะฝะฝัะต ะฒ ะฟะฐะผััะธ
let contacts = [
  { id: 1, name: "ะะฒะฐะฝ ะะฒะฐะฝะพะฒ", phone: "+79161234567", email: "ivan@mail.ru" },
  { id: 2, name: "ะะตัั ะะตััะพะฒ", phone: "+79169876543", email: "petr@gmail.com" },
  { id: 3, name: "ะะฐัะธั ะกะธะดะพัะพะฒะฐ", phone: "+79165554433", email: "maria@yandex.ru" }
];

let nextId = 4;

// API Routes

// GET ะฒัะต ะบะพะฝัะฐะบัั
app.get('/api/contacts', (req, res) => {
  console.log('๐ ะะพะปััะตะฝ ะทะฐะฟัะพั ะบะพะฝัะฐะบัะพะฒ');
  res.json(contacts);
});

// POST ะฝะพะฒัะน ะบะพะฝัะฐะบั
app.post('/api/contacts', (req, res) => {
  const { name, phone, email } = req.body;
  
  if (!name || !phone) {
    return res.status(400).json({ error: 'ะะผั ะธ ัะตะปะตัะพะฝ ะพะฑัะทะฐัะตะปัะฝั' });
  }
  
  const newContact = { 
    id: nextId++, 
    name, 
    phone, 
    email: email || '',
    created_at: new Date().toISOString()
  };
  
  contacts.push(newContact);
  console.log('โ ะะพะฑะฐะฒะปะตะฝ ะบะพะฝัะฐะบั:', name);
  res.status(201).json(newContact);
});

// PUT ะพะฑะฝะพะฒะธัั ะบะพะฝัะฐะบั
app.put('/api/contacts/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const { name, phone, email } = req.body;
  
  const contactIndex = contacts.findIndex(c => c.id === id);
  
  if (contactIndex === -1) {
    return res.status(404).json({ error: 'ะะพะฝัะฐะบั ะฝะต ะฝะฐะนะดะตะฝ' });
  }
  
  contacts[contactIndex] = {
    ...contacts[contactIndex],
    name: name || contacts[contactIndex].name,
    phone: phone || contacts[contactIndex].phone,
    email: email || contacts[contactIndex].email
  };
  
  console.log('โ๏ธ ะะฑะฝะพะฒะปะตะฝ ะบะพะฝัะฐะบั:', contacts[contactIndex].name);
  res.json(contacts[contactIndex]);
});

// DELETE ะบะพะฝัะฐะบั
app.delete('/api/contacts/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const contactIndex = contacts.findIndex(c => c.id === id);
  
  if (contactIndex === -1) {
    return res.status(404).json({ error: 'ะะพะฝัะฐะบั ะฝะต ะฝะฐะนะดะตะฝ' });
  }
  
  const deletedContact = contacts.splice(contactIndex, 1)[0];
  console.log('๐๏ธ ะฃะดะฐะปะตะฝ ะบะพะฝัะฐะบั:', deletedContact.name);
  res.json({ message: 'ะะพะฝัะฐะบั ัะดะฐะปะตะฝ', deleted: deletedContact });
});

// ะขะตััะพะฒัะน ะผะฐััััั
app.get('/api/test', (req, res) => {
  res.json({ 
    message: 'ะกะตัะฒะตั ัะฐะฑะพัะฐะตั!', 
    contactsCount: contacts.length,
    timestamp: new Date().toISOString()
  });
});

// Serve frontend for all routes
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, '../frontend/index.html'));
});

app.listen(PORT, () => {
  console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ http://localhost:${PORT}`);
  console.log(`๐ API ะดะพัััะฟะตะฝ ะฟะพ http://localhost:${PORT}/api/contacts`);
  console.log(`๐งช ะขะตััะพะฒัะน ะผะฐััััั: http://localhost:${PORT}/api/test`);
  console.log(`๐ ะะฐะณััะถะตะฝะพ ${contacts.length} ัะตััะพะฒัั ะบะพะฝัะฐะบัะพะฒ`);
});